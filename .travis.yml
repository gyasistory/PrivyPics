language: android
dist: trusty
sudo: required
jdk:  oraclejdk8

env:
  global:
    - GRADLE_OPTS="-Xmx3072m"
    # wait up to 10 minutes for adb to connect to emulator
    - ADB_INSTALL_TIMEOUT=10
  matrix:
    - ANDROID_TARGET=android-26 ANDROID_ABI=x86
    - ANDROID_TARGET=android-16 ANDROID_ABI=x86

branches:
  only:
    - development
    - master

stages:
  - name: compile
    if: tag IS blank
  - name: test
    if: tag IS blank
  - name: release
    if: type = push

before_cache:
- rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
  - $HOME/.android/build-cache
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/

before_install:
  - chmod +x gradlew
  # Install SDK license so Android Gradle plugin can install deps.
  - mkdir "$ANDROID_HOME/licenses" || true
  - echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
  - echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> "$ANDROID_HOME/licenses/android-sdk-license"
  - echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> "$ANDROID_HOME/licenses/android-sdk-license"

install:
  # Install the rest of tools (e.g., avdmanager)
  - sdkmanager tools
  # Install the system image
  - sdkmanager "system-images;$ANDROID_TARGET;default;$ANDROID_ABI"
  # Create and start emulator for the script. Meant to race the install task.
  - echo no | avdmanager create avd --force -n test -k "system-images;$ANDROID_TARGET;default;$ANDROID_ABI"
#  - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &
  - $ANDROID_HOME/emulator/emulator  -avd test -no-boot-anim -no-snapshot-save -no-audio -no-window -gpu off -debug  -all
  # build the tests
  - ./gradlew clean assembleAndroidTest --continue --stacktrace --parallel
script:
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
  - ./gradlew connectedCheck --continue --stacktrace --parallel

jobs:
  include:
#  - name: "Static Analysis"
#    stage: compile
#
#    before_script: skip
#    script:
#    - chmod +x gradlew
#    - ./gradlew check --continue --stacktrace --parallel
#
#    after_failure:
#    - cat /home/travis/build/gyasistory/PrivyPics/build/reports/lint-results*.xml
#    - cat /home/travis/build/gyasistory/PrivyPics/*/build/reports/lint-results*.xml

#  - name: "Fastlane Test"
#    stage: test
#
#    install:
#    - git fetch
#    - gem install bundler
#    - bundler install
#    script: fastlane android test

  - name: "Deploy Beta"
    stage: release
    if: repo = gyasistory/PrivyPics AND type = push AND branch = development

    install:
    - git fetch
    - gem install bundler
    - bundler install
    script:
    - chmod +x gradlew
    - fastlane android beta
    - fastlane android update_version


  - name: "Fastlane Release"
    stage: release
    if: repo = gyasistory/PrivyPics AND type = push AND branch = master

    install:
      - git fetch
      - gem install bundler
      - bundler install
    script:
    - fastlane android deploy
    - ./gradlew assembleRelease appDistributionUploadRelease


notifications:
  email: true
  